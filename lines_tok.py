import matplotlib
import matplotlib.pyplot as plt
import numpy as np
t=[]
x1=[]
x2=[]
xi1=[]
xi2=[]
for i in range(71):
    t.append(i/10)
for i in range(261):
    xi1.append(0)
    xi2.append(0)
plt.subplot(1, 7, 1)
for i in range(6):
    for j in range(6):
        x1.append(-2+j/5)
        x2.append(-1-i/5)
        '''x10[i][j]=x1[0]
        x20[i][j]=x2[0]
        v0[i][j]=((t[0])**4*(x10[i][j])**2+(t[0])**2*(x20[i][j])**2)**0.5'''
        for k in range(1,11):
            k11=-((t[k-1])**2)*x1[k-1]
            k12=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*2/3*k11)
            k13=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*(-1/3*k11+k12))
            k21=t[k-1]*x2[k-1]
            k22=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*2/3*k21)
            k23=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*(-1/3*k21+k22))
            x1.append(x1[k-1]+0.1*(0.25*k11+0.5*k12+0.25*k13))
            x2.append(x2[k-1]+0.1*(0.25*k21+0.5*k22+0.25*k23))
            if k==10:
                xi1[130]=x1[k]
                xi2[130]=x2[k]
                for i1 in range(1, 131):
                    k1=-((t[k]*xi1[130-i1+1])/xi2[130-i1+1])
                    k2=-((t[k]*(xi1[130-i1+1]-0.1*2/3*k1))/(xi2[130-i1+1]-2/3*0.1))
                    k3=-((t[k]*(xi1[130-i1+1]-0.1*(-1/3*k1+k2)))/(xi2[130-i1+1]-2/3*0.1))
                    xi1[130-i1]=xi1[130-i1+1]-0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130-i1]=xi2[130-i1+1]-0.1
                    k1=-((t[k]*xi1[130+i1-1])/xi2[130+i1-1])
                    k2=-((t[k]*(xi1[130+i1-1]+0.1*2/3*k1))/(xi2[130+i1-1]+2/3*0.1))
                    k3=-((t[k]*(xi1[130+i1-1]+0.1*(-1/3*k1+k2)))/(xi2[130+i1-1]+2/3*0.1))
                    xi1[130+i1]=xi1[130+i1-1]+0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130+i1]=xi2[130+i1-1]+0.1
                plt.plot(xi1, xi2)
                x1=[]
                x2=[]
plt.subplot(1, 7, 2)
for i in range(6):
    for j in range(6):
        x1.append(-2+j/5)
        x2.append(-1-i/5)
        '''x10[i][j]=x1[0]
        x20[i][j]=x2[0]
        v0[i][j]=((t[0])**4*(x10[i][j])**2+(t[0])**2*(x20[i][j])**2)**0.5'''
        for k in range(1, 21):
            k11=-((t[k-1])**2)*x1[k-1]
            k12=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*2/3*k11)
            k13=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*(-1/3*k11+k12))
            k21=t[k-1]*x2[k-1]
            k22=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*2/3*k21)
            k23=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*(-1/3*k21+k22))
            x1.append(x1[k-1]+0.1*(0.25*k11+0.5*k12+0.25*k13))
            x2.append(x2[k-1]+0.1*(0.25*k21+0.5*k22+0.25*k23))
            if k==20:
                xi1[130]=x1[k]
                xi2[130]=x2[k]
                for i1 in range(1, 131):
                    k1=-((t[k]*xi1[130-i1+1])/xi2[130-i1+1])
                    k2=-((t[k]*(xi1[130-i1+1]-0.1*2/3*k1))/(xi2[130-i1+1]-2/3*0.1))
                    k3=-((t[k]*(xi1[130-i1+1]-0.1*(-1/3*k1+k2)))/(xi2[130-i1+1]-2/3*0.1))
                    xi1[130-i1]=xi1[130-i1+1]-0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130-i1]=xi2[130-i1+1]-0.1
                    k1=-((t[k]*xi1[130+i1-1])/xi2[130+i1-1])
                    k2=-((t[k]*(xi1[130+i1-1]+0.1*2/3*k1))/(xi2[130+i1-1]+2/3*0.1))
                    k3=-((t[k]*(xi1[130+i1-1]+0.1*(-1/3*k1+k2)))/(xi2[130+i1-1]+2/3*0.1))
                    xi1[130+i1]=xi1[130+i1-1]+0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130+i1]=xi2[130+i1-1]+0.1
                plt.plot(xi1, xi2)
                x1=[]
                x2=[]
plt.subplot(1, 7, 3)
for i in range(6):
    for j in range(6):
        x1.append(-2+j/5)
        x2.append(-1-i/5)
        '''x10[i][j]=x1[0]
        x20[i][j]=x2[0]
        v0[i][j]=((t[0])**4*(x10[i][j])**2+(t[0])**2*(x20[i][j])**2)**0.5'''
        for k in range(1, 31):
            k11=-((t[k-1])**2)*x1[k-1]
            k12=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*2/3*k11)
            k13=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*(-1/3*k11+k12))
            k21=t[k-1]*x2[k-1]
            k22=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*2/3*k21)
            k23=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*(-1/3*k21+k22))
            x1.append(x1[k-1]+0.1*(0.25*k11+0.5*k12+0.25*k13))
            x2.append(x2[k-1]+0.1*(0.25*k21+0.5*k22+0.25*k23))
            if k==30:
                xi1[130]=x1[k]
                xi2[130]=x2[k]
                for i1 in range(1, 131):
                    k1=-((t[k]*xi1[130-i1+1])/xi2[130-i1+1])
                    k2=-((t[k]*(xi1[130-i1+1]-0.1*2/3*k1))/(xi2[130-i1+1]-2/3*0.1))
                    k3=-((t[k]*(xi1[130-i1+1]-0.1*(-1/3*k1+k2)))/(xi2[130-i1+1]-2/3*0.1))
                    xi1[130-i1]=xi1[130-i1+1]-0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130-i1]=xi2[130-i1+1]-0.1
                    k1=-((t[k]*xi1[130+i1-1])/xi2[130+i1-1])
                    k2=-((t[k]*(xi1[130+i1-1]+0.1*2/3*k1))/(xi2[130+i1-1]+2/3*0.1))
                    k3=-((t[k]*(xi1[130+i1-1]+0.1*(-1/3*k1+k2)))/(xi2[130+i1-1]+2/3*0.1))
                    xi1[130+i1]=xi1[130+i1-1]+0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130+i1]=xi2[130+i1-1]+0.1
                plt.plot(xi1, xi2)
                x1=[]
                x2=[]
plt.subplot(1, 7, 4)
for i in range(6):
    for j in range(6):
        x1.append(-2+j/5)
        x2.append(-1-i/5)
        '''x10[i][j]=x1[0]
        x20[i][j]=x2[0]
        v0[i][j]=((t[0])**4*(x10[i][j])**2+(t[0])**2*(x20[i][j])**2)**0.5'''
        for k in range(1, 41):
            k11=-((t[k-1])**2)*x1[k-1]
            k12=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*2/3*k11)
            k13=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*(-1/3*k11+k12))
            k21=t[k-1]*x2[k-1]
            k22=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*2/3*k21)
            k23=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*(-1/3*k21+k22))
            x1.append(x1[k-1]+0.1*(0.25*k11+0.5*k12+0.25*k13))
            x2.append(x2[k-1]+0.1*(0.25*k21+0.5*k22+0.25*k23))
            if k==40:
                xi1[130]=x1[k]
                xi2[130]=x2[k]
                for i1 in range(1, 131):
                    k1=-((t[k]*xi1[130-i1+1])/xi2[130-i1+1])
                    k2=-((t[k]*(xi1[130-i1+1]-0.1*2/3*k1))/(xi2[130-i1+1]-2/3*0.1))
                    k3=-((t[k]*(xi1[130-i1+1]-0.1*(-1/3*k1+k2)))/(xi2[130-i1+1]-2/3*0.1))
                    xi1[130-i1]=xi1[130-i1+1]-0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130-i1]=xi2[130-i1+1]-0.1
                    k1=-((t[k]*xi1[130+i1-1])/xi2[130+i1-1])
                    k2=-((t[k]*(xi1[130+i1-1]+0.1*2/3*k1))/(xi2[130+i1-1]+2/3*0.1))
                    k3=-((t[k]*(xi1[130+i1-1]+0.1*(-1/3*k1+k2)))/(xi2[130+i1-1]+2/3*0.1))
                    xi1[130+i1]=xi1[130+i1-1]+0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130+i1]=xi2[130+i1-1]+0.1
                plt.plot(xi1, xi2)
                x1=[]
                x2=[]
plt.subplot(1, 7, 5)
for i in range(6):
    for j in range(6):
        x1.append(-2+j/5)
        x2.append(-1-i/5)
        '''x10[i][j]=x1[0]
        x20[i][j]=x2[0]
        v0[i][j]=((t[0])**4*(x10[i][j])**2+(t[0])**2*(x20[i][j])**2)**0.5'''
        for k in range(1, 51):
            k11=-((t[k-1])**2)*x1[k-1]
            k12=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*2/3*k11)
            k13=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*(-1/3*k11+k12))
            k21=t[k-1]*x2[k-1]
            k22=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*2/3*k21)
            k23=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*(-1/3*k21+k22))
            x1.append(x1[k-1]+0.1*(0.25*k11+0.5*k12+0.25*k13))
            x2.append(x2[k-1]+0.1*(0.25*k21+0.5*k22+0.25*k23))
            if k==50:
                xi1[130]=x1[k]
                xi2[130]=x2[k]
                for i1 in range(1, 131):
                    k1=-((t[k]*xi1[130-i1+1])/xi2[130-i1+1])
                    k2=-((t[k]*(xi1[130-i1+1]-0.1*2/3*k1))/(xi2[130-i1+1]-2/3*0.1))
                    k3=-((t[k]*(xi1[130-i1+1]-0.1*(-1/3*k1+k2)))/(xi2[130-i1+1]-2/3*0.1))
                    xi1[130-i1]=xi1[130-i1+1]-0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130-i1]=xi2[130-i1+1]-0.1
                    k1=-((t[k]*xi1[130+i1-1])/xi2[130+i1-1])
                    k2=-((t[k]*(xi1[130+i1-1]+0.1*2/3*k1))/(xi2[130+i1-1]+2/3*0.1))
                    k3=-((t[k]*(xi1[130+i1-1]+0.1*(-1/3*k1+k2)))/(xi2[130+i1-1]+2/3*0.1))
                    xi1[130+i1]=xi1[130+i1-1]+0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130+i1]=xi2[130+i1-1]+0.1
                plt.plot(xi1, xi2)
                x1=[]
                x2=[]
plt.subplot(1, 7, 6)
for i in range(6):
    for j in range(6):
        x1.append(-2+j/5)
        x2.append(-1-i/5)
        '''x10[i][j]=x1[0]
        x20[i][j]=x2[0]
        v0[i][j]=((t[0])**4*(x10[i][j])**2+(t[0])**2*(x20[i][j])**2)**0.5'''
        for k in range(1, 61):
            k11=-((t[k-1])**2)*x1[k-1]
            k12=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*2/3*k11)
            k13=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*(-1/3*k11+k12))
            k21=t[k-1]*x2[k-1]
            k22=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*2/3*k21)
            k23=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*(-1/3*k21+k22))
            x1.append(x1[k-1]+0.1*(0.25*k11+0.5*k12+0.25*k13))
            x2.append(x2[k-1]+0.1*(0.25*k21+0.5*k22+0.25*k23))
            if k==60:
                xi1[130]=x1[k]
                xi2[130]=x2[k]
                for i1 in range(1, 131):
                    k1=-((t[k]*xi1[130-i1+1])/xi2[130-i1+1])
                    k2=-((t[k]*(xi1[130-i1+1]-0.1*2/3*k1))/(xi2[130-i1+1]-2/3*0.1))
                    k3=-((t[k]*(xi1[130-i1+1]-0.1*(-1/3*k1+k2)))/(xi2[130-i1+1]-2/3*0.1))
                    xi1[130-i1]=xi1[130-i1+1]-0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130-i1]=xi2[130-i1+1]-0.1
                    k1=-((t[k]*xi1[130+i1-1])/xi2[130+i1-1])
                    k2=-((t[k]*(xi1[130+i1-1]+0.1*2/3*k1))/(xi2[130+i1-1]+2/3*0.1))
                    k3=-((t[k]*(xi1[130+i1-1]+0.1*(-1/3*k1+k2)))/(xi2[130+i1-1]+2/3*0.1))
                    xi1[130+i1]=xi1[130+i1-1]+0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130+i1]=xi2[130+i1-1]+0.1
                plt.plot(xi1, xi2)
                x1=[]
                x2=[]
plt.subplot(1, 7, 7)
for i in range(6):
    for j in range(6):
        x1.append(-2+j/5)
        x2.append(-1-i/5)
        '''x10[i][j]=x1[0]
        x20[i][j]=x2[0]
        v0[i][j]=((t[0])**4*(x10[i][j])**2+(t[0])**2*(x20[i][j])**2)**0.5'''
        for k in range(1, 71):
            k11=-((t[k-1])**2)*x1[k-1]
            k12=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*2/3*k11)
            k13=-((t[k-1]+2/3*0.1)**2)*(x1[k-1]+0.1*(-1/3*k11+k12))
            k21=t[k-1]*x2[k-1]
            k22=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*2/3*k21)
            k23=(t[k-1]+2/3*0.1)*(x2[k-1]+0.1*(-1/3*k21+k22))
            x1.append(x1[k-1]+0.1*(0.25*k11+0.5*k12+0.25*k13))
            x2.append(x2[k-1]+0.1*(0.25*k21+0.5*k22+0.25*k23))
            if k==70:
                xi1[130]=x1[k]
                xi2[130]=x2[k]
                for i1 in range(1, 131):
                    k1=-((t[k]*xi1[130-i1+1])/xi2[130-i1+1])
                    k2=-((t[k]*(xi1[130-i1+1]-0.1*2/3*k1))/(xi2[130-i1+1]-2/3*0.1))
                    k3=-((t[k]*(xi1[130-i1+1]-0.1*(-1/3*k1+k2)))/(xi2[130-i1+1]-2/3*0.1))
                    xi1[130-i1]=xi1[130-i1+1]-0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130-i1]=xi2[130-i1+1]-0.1
                    k1=-((t[k]*xi1[130+i1-1])/xi2[130+i1-1])
                    k2=-((t[k]*(xi1[130+i1-1]+0.1*2/3*k1))/(xi2[130+i1-1]+2/3*0.1))
                    k3=-((t[k]*(xi1[130+i1-1]+0.1*(-1/3*k1+k2)))/(xi2[130+i1-1]+2/3*0.1))
                    xi1[130+i1]=xi1[130+i1-1]+0.1*(0.25*k1+0.5*k2+0.25*k3)
                    xi2[130+i1]=xi2[130+i1-1]+0.1
                plt.plot(xi1, xi2)
                x1=[]
                x2=[]
plt.show()
